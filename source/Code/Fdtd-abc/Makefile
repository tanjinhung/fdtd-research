# Note: The dependence on the header files is generated by
#       makedepend.  Prior to making, issue the command:
#
#               make depend
#
##########################################################
MAINSRC=abcdemo1.c 
SRC=${MAINSRC} abcfirst.c ezinc.c gridhalfspace.c snapshot.c tfsf.c update3.c
OFILES=${SRC:.c=.o}
EXE=${MAINSRC:.c=}

SRC2=${MAINSRC} abcsecond.c ezinc.c gridhalfspace.c snapshot.c tfsf.c update3.c
OFILES2=${SRC2:.c=.o}

all: ${EXE} abcdemo2

abcdemo2: ${OFILES2}
	gcc ${OFILES2} -lm -o abcdemo2


${EXE}: ${OFILES}
	gcc ${OFILES} -lm -o $@


# A way to obtain unique file names -- not truly necessary, but
# prevents some duplication in the depends.  Found the perl script on
# the Web.  No way I would generate this on my own.  Note that the
# double dollar signs are reduced to single dollar signs before perl
# sees the script.
UNIQSRC=$(shell echo ${SRC} |\
       perl -e 'while(<>) {               \
          %s=();                          \
          @u=grep {! $$s{$$_} ++ } sort(split()); \
          print "@u";}')

#================================================

.SUFFIXES: .c .o

.c.o:
	gcc -c -O -Wall $<

clean:
	rm -f *~ sim.[0-9] sim.[1-9][0-9] junk*
	rm -f ${OFILES1} ${OFILES2} ${OFILES}
	rm -f ${EXE} abcdemo2

# -Y to prevent search of system headers and
# pipe warning to /dev/null since it will complain
# about not finding the system headers!
depend:
	makedepend -Y ${UNIQSRC} &> /dev/null

# DO NOT DELETE

abcfirst.o: fdtd4.h
ezinc.o: ezinc.h fdtd4.h
gridhalfspace.o: fdtd4.h
snapshot.o: fdtd4.h
tfsf.o: fdtd4.h ezinc.h
update3.o: fdtd4.h
