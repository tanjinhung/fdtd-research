# Note: The dependence on the header files is generated by
#       makedepend.  Prior to making, issue the command:
#
#               make depend
#
##########################################################
MAINSRC=3d-tfsf-demo.c 
SRC=${MAINSRC} abc3dfirst.c ricker.c grid3dsphere.c snapshot3d.c\
	update3d.c tfsf-3d-ez.c grid1d.c
OFILES=${SRC:.c=.o}
EXE=${MAINSRC:.c=}

all: ${EXE}

${EXE}: ${OFILES}
	gcc ${OFILES} -lm -o $@

# A way to obtain unique file names -- not truly necessary, but
# prevents some duplication in the depends.  Found the perl script on
# the Web.  No way I would generate this on my own.  Note that the
# double dollar signs are reduced to single dollar signs before perl
# sees the script.
UNIQSRC=$(shell echo ${SRC} |\
       perl -e 'while(<>) {               \
          %s=();                          \
          @u=grep {! $$s{$$_} ++ } sort(split()); \
          print "@u";}')

#================================================

.SUFFIXES: .c .o

.c.o:
	gcc -c -O -Wall $<

clean:
	rm -f *~ sim.[0-9] sim.[1-9][0-9] sim.*.ppm junk*
	rm -f ${OFILES}
	rm -f ${EXE}

# -Y to prevent search of system headers and
# pipe warning to /dev/null since it will complain
# about not finding the system headers!
depend:
	makedepend -Y ${UNIQSRC} &> /dev/null

# DO NOT DELETE

3d-tfsf-demo.o: fdtd-alloc.h fdtd-macro.h fdtd-grid.h fdtd-proto.h
abc3dfirst.o: fdtd-alloc.h fdtd-macro.h fdtd-grid.h
grid1d.o: fdtd-macro.h fdtd-grid.h fdtd-alloc.h
grid3dsphere.o: fdtd-macro.h fdtd-grid.h fdtd-alloc.h
ricker.o: ezinc.h fdtd-macro.h fdtd-grid.h
snapshot3d.o: fdtd-macro.h fdtd-grid.h
tfsf-3d-ez.o: fdtd-macro.h fdtd-grid.h fdtd-proto.h fdtd-alloc.h ezinc.h
update3d.o: fdtd-macro.h fdtd-grid.h
